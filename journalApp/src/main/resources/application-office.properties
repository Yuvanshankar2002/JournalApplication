spring.redis.ssl.enabled=true
spring.redis.host=your Redis ConnectionHost from rediscloud
spring.redis.port=16448
spring.redis.password=B943hBBrjvhRnCqu3LXJLTJP7Jm8sRg9
spring.data.mongodb.uri =your Db connection from MongoCluster
spring.data.mongodb.database=JournalApplication
spring.data.mongodb.auto-index-creation = true

weather.api.key = 617bef6e1684aa0eb292cd8b7ddb8d62


spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = your email address
spring.mail.password = your password
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Kafka Bootstrap Server
spring.kafka.bootstrap-servers=localhost:9092

# Producer Config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer Config
#spring.kafka.consumer.group-id=weekly-sentiment-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=net.engineeringdigest.journalApp.Model
spring.kafka.consumer.properties.spring.json.value.default.type=net.engineeringdigest.journalApp.Model.SentimentData
logging.level.org.springframework.kafka=DEBUG
#spring.kafka.consumer.properties.spring.json.trusted.packages=*


#Create a new client id from Google Oauth down is expired one....
spring.security.oauth2.client.registration.google.client-id=your client id
spring.security.oauth2.client.registration.google.client-secret=your client secret





















